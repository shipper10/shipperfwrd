import os
import asyncio
from telegram import Update
from telegram.ext import Application, MessageHandler, filters, ContextTypes, CommandHandler

# --- ุงูุฅุนุฏุงุฏุงุช ุงูุฃุณุงุณูุฉ ---
# ุงุณุชุจุฏู 'YOUR_BOT_TOKEN' ุจุงูุชููู ุงูุฎุงุต ุจุจูุชู ุฃู ุงุณุชุฎุฏู ูุชุบูุฑุงุช ุงูุจูุฆุฉ ูู Koyeb
BOT_TOKEN = os.environ.get('BOT_TOKEN', 'YOUR_BOT_TOKEN')

# --- ุงูุฏูุงู ุงูุฃุณุงุณูุฉ ููุจูุช ---

async def handle_audio_files(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    ูุฐู ุงูุฏุงูุฉ ุงูุฑุฆูุณูุฉ ุงูุชู ุชุนุงูุฌ ุงูุฑุณุงุฆู ุงูุชู ุชุญุชูู ุนูู ูููุงุช.
    ุชูุชุธุฑ ููููุงู ูุชุฌููุน ูู ุงููููุงุช ุงูุชู ูุฏ ุชุตู ูู ุฏูุนุฉ ูุงุญุฏุฉ (ุฃูุจูู).
    """
    # ุฅุฐุง ูุงูุช ูุฐู ุฃูู ุฑุณุงูุฉ ูู ุฏูุนุฉุ ูุจุฏุฃ ูุคูุชุงู
    if 'file_queue' not in context.user_data:
        context.user_data['file_queue'] = []
        # ููุชุธุฑ ูุชุฑุฉ ูุตูุฑุฉ (1.5 ุซุงููุฉ) ูุชุฌููุน ูู ุงููููุงุช ูู ุงูุฃูุจูู
        asyncio.create_task(process_file_queue(update, context))

    # ูุถูู ุงูุฑุณุงูุฉ ุงูุญุงููุฉ ุฅูู ูุงุฆูุฉ ุงูุงูุชุธุงุฑ
    context.user_data['file_queue'].append(update.message)


async def process_file_queue(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    ุจุนุฏ ุงูุชูุงุก ูุชุฑุฉ ุงูุงูุชุธุงุฑุ ุชุจุฏุฃ ูุฐู ุงูุฏุงูุฉ ูู ูุนุงูุฌุฉ ุงููููุงุช ุงููุฌูุนุฉ.
    """
    await asyncio.sleep(1.5)  # ุงูุชุธุงุฑ ูุชุฌููุน ูู ุงููููุงุช

    messages = context.user_data.pop('file_queue', [])
    if not messages:
        return

    # ูุฑุฒ ุงูุฑุณุงุฆู ุจูุงุกู ุนูู ูุนุฑู ุงูุฑุณุงูุฉ ููุญูุงุธ ุนูู ุงูุชุฑุชูุจ
    messages.sort(key=lambda m: m.message_id)

    # ุฅุฑุณุงู ุฑุณุงูุฉ ูููุณุชุฎุฏู ูุฅุนูุงูู ุจุจุฏุก ุงููุนุงูุฌุฉ
    await update.effective_chat.send_message(f"ุชู ุงุณุชูุงู {len(messages)} ููู. ุฌุงุฑู ุฅุนุงุฏุฉ ุงูุฅุฑุณุงู...")

    for message in messages:
        # ูุชุฃูุฏ ุฃู ุงูุฑุณุงูุฉ ุชุญุชูู ุนูู ููู ูุฃู ููุนู mp3
        if message.document and message.document.mime_type == 'audio/mpeg':
            try:
                # ุจุจุณุงุทุฉ ูุนูุฏ ุฅุฑุณุงู ุงูููู ุงูุตูุชู ุจุงุณุชุฎุฏุงู ูุนุฑูู ุงูููู (file_id)
                # ุชููุฌุฑุงู ุณูููู ุชููุงุฆูุงู ุจูุนุงูุฌุชู ูููู ุตูุชู ูุงุจู ููุชุดุบูู
                await context.bot.send_audio(
                    chat_id=update.effective_chat.id,
                    audio=message.document.file_id
                )
            except Exception as e:
                print(f"ุญุฏุซ ุฎุทุฃ: {e}")
                await update.effective_chat.send_message(f"ุนููุงูุ ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ูุนุงูุฌุฉ ุงูููู: {message.document.file_name}")
    
    await update.effective_chat.send_message("โ ุงูุชูู ุงูุฅุฑุณุงู!")


async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    ุฏุงูุฉ ุชุฑุญูุจูุฉ ุนูุฏ ุฅุฑุณุงู /start
    """
    welcome_message = """
    ุฃููุงู ุจู ูู ุจูุช ุฅุนุงุฏุฉ ุฅุฑุณุงู MP3! ๐ถ

    ุฃุฑุณู ูู ููู MP3 ุฃู ูุฌููุนุฉ ูููุงุช (ุฃูุจูู) ูุณุฃููู ุจุฅุนุงุฏุฉ ุฅุฑุณุงููุง ูู ูููุงุทุน ุตูุชูุฉ ูุงุจูุฉ ููุชุดุบูู ูุจุงุดุฑุฉ ูุน ุงูุญูุงุธ ุนูู ุจูุงูุงุชูุง ุงูุฃุตููุฉ.
    """
    await update.message.reply_text(welcome_message)


# --- ุชุดุบูู ุงูุจูุช ---
def main():
    """
    ุงูุฏุงูุฉ ุงูุฑุฆูุณูุฉ ูุชุดุบูู ุงูุจูุช.
    """
    print("ุงูุจูุช ููุฏ ุงูุชุดุบูู...")
    
    application = Application.builder().token(BOT_TOKEN).build()

    # ุฅุถุงูุฉ ูุนุงูุฌ ุงูุฃูุงูุฑ
    application.add_handler(CommandHandler("start", start_command))

    # ุฅุถุงูุฉ ูุนุงูุฌ ูููููุงุช (Documents) ูู ููุน mp3
    application.add_handler(MessageHandler(filters.Document.MIME_TYPE & filters.ChatType.PRIVATE, handle_audio_files))

    # ุชุดุบูู ุงูุจูุช
    application.run_polling()


if __name__ == '__main__':
    main()
